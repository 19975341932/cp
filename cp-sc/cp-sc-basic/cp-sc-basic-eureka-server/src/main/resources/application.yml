server:
  port: 10086 # 服务端口

spring:
  application:
    name: eurekaserver # 服务名称

  # eureka也是一个服务 也需要将自己注册到注册中心，将来启动两三eureka就可以即时通讯 做数据交流
# Eureka注册中心
eureka:
  instance:
    hostname: localhost
  # 自己作为服务端的配置
  server:
    #自我保护模式，当出现出现网络分区、eureka在短时间内丢失过多客户端时，会进入自我保护模式，即一个服务长时间没有发送心跳，eureka也不会将其删除，默认为true
    enable-self-preservation: true
    #Eureka Server 在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来
    renewal-percent-threshold: 0.85
    #eureka server清理无效节点的时间间隔，默认60000毫秒，即60秒
    eviction-interval-timer-in-ms: 60000
    # 同步更新阈值时间
    wait-time-in-ms-when-sync-empty: 5000
  # 自己作为客户端的配置
  client:
    # 是否注册到eureka
    register-with-eureka: false
    # 是否从eureka中拉取注册信息
    fetch-registry: false
    # 暴露eureka服务的地址
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
